<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified"
    xmlns="http://www.spicefactory.org/parsley"
    xmlns:tns="http://www.spicefactory.org/parsley"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.spicefactory.org/parsley">

    <xs:element name="objects">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
	            <xs:element name="include" type="includeType" minOccurs="0" maxOccurs="unbounded"/>
	            <xs:element name="variable" type="variableType" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="object" type="rootObjectType"/>    
            	<xs:any namespace="##other"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:complexType name="includeType">
        <xs:attribute name="file" type="xs:token" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="variableType">
        <xs:group ref="value"/>
        <xs:attribute name="name" type="xs:token" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="objectType">
        <xs:sequence>
            <xs:element name="constructor-args" type="arrayType" minOccurs="0"/>
            <xs:element name="property" type="propertyType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="async-init" type="asyncInitType" minOccurs="0"/>
            <xs:element name="managed-events" type="managedEventsType" minOccurs="0"/>
            <xs:element name="message-handler" type="messageHandlerType" minOccurs="0"/>
            <xs:element name="message-interceptor" type="messageInterceptorType" minOccurs="0"/>
            <xs:element name="message-binding" type="messageBindingType" minOccurs="0"/>
            <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attributeGroup ref="objectAttributes"/>
    </xs:complexType>
    
    <xs:attributeGroup name="objectAttributes">
        <xs:attribute name="type" type="xs:token" use="optional"/>
        <xs:attribute name="pre-destroy-method" type="xs:token" use="optional"/>
        <xs:attribute name="post-construct-method" type="xs:token" use="optional"/>
        <xs:attribute name="factory-method" type="xs:token" use="optional"/>
    </xs:attributeGroup>
    
    <xs:complexType name="rootObjectType">
        <xs:complexContent>
            <xs:extension base="objectType">
                <xs:attributeGroup ref="rootObjectAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:attributeGroup name="rootObjectAttributes">
        <xs:attribute name="id" type="xs:token" use="required"/>
        <xs:attribute name="lazy" type="xs:boolean" use="optional"/>  
        <xs:attribute name="singleton" type="xs:boolean" use="optional"/>  
    </xs:attributeGroup>
    
    <xs:complexType name="propertyType">
    	<xs:sequence minOccurs="0">
    		<xs:group ref="value"/>
    	</xs:sequence>
        <xs:attribute name="name" type="xs:token" use="required"/>
        <xs:attribute name="value" type="xs:token" use="optional"/>
        <xs:attribute name="ref" type="xs:token" use="optional"/>
    </xs:complexType>
    
    <xs:complexType name="asyncInitType">
        <xs:attribute name="order" type="intOrExpression" use="optional"/>
        <xs:attribute name="complete-event" type="xs:token" use="optional"/>
        <xs:attribute name="error-event" type="xs:token" use="optional"/>
    </xs:complexType>
    
    <xs:complexType name="managedEventsType">
        <xs:attribute name="names" type="xs:token" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="messageHandlerType">
        <xs:attribute name="method" type="xs:token" use="required"/>
        <xs:attribute name="type" type="xs:token" use="optional"/>
        <xs:attribute name="selector" type="xs:token" use="optional"/>
        <xs:attribute name="message-properties" type="xs:token" use="optional"/>
    </xs:complexType>
    
    <xs:complexType name="messageInterceptorType">
        <xs:attribute name="method" type="xs:token" use="required"/>
        <xs:attribute name="type" type="xs:token" use="optional"/>
        <xs:attribute name="selector" type="xs:token" use="optional"/>
    </xs:complexType>
    
    <xs:complexType name="messageBindingType">
        <xs:attribute name="message-property" type="xs:token" use="required"/>
        <xs:attribute name="target-property" type="xs:token" use="required"/>
        <xs:attribute name="type" type="xs:token" use="required"/>
        <xs:attribute name="selector" type="xs:token" use="optional"/>
    </xs:complexType>

    <xs:group name="value">
        <xs:choice>
            <xs:element name="null" type="emptyType"/>
            <xs:element name="boolean" type="booleanOrExpression"/>
            <xs:element name="number" type="numberOrExpression"/>
            <xs:element name="int" type="intOrExpression"/>
            <xs:element name="uint" type="uintOrExpression"/>
            <xs:element name="string" type="xs:string"/>
            <xs:element name="date" type="dateOrExpression"/>
            <xs:element name="class" type="xs:token"/>
            <xs:element name="static-property" type="staticPropertyType"/>
            <xs:element name="array" type="arrayType"/>
            <xs:element name="object" type="objectType"/>
            <xs:element name="object-ref" type="refType"/>
            <xs:any namespace="##other"/>
        </xs:choice>
    </xs:group>
    
    <xs:complexType name="emptyType"/>
    
    <xs:simpleType name="expression">
        <xs:restriction base="xs:token">
            <xs:pattern value="\$\{.+\}"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="date">
        <xs:restriction base="xs:token">
            <xs:pattern value="[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}( [0-9]{1,2}:[0-9]{2}:[0-9]{2})?"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="booleanOrExpression">
        <xs:union memberTypes="xs:boolean expression"/>
    </xs:simpleType>
    
    <xs:simpleType name="numberOrExpression">
        <xs:union memberTypes="xs:double hexValue expression"/>
    </xs:simpleType>
    
    <xs:simpleType name="intOrExpression">
        <xs:union memberTypes="xs:int hexValue expression"/>
    </xs:simpleType>
    
    <xs:simpleType name="uintOrExpression">
        <xs:union memberTypes="xs:nonNegativeInteger nonNegativeHexValue expression"/>
    </xs:simpleType>
    
    <xs:simpleType name="nonNegativeHexValue">
        <xs:restriction base="xs:token">
            <xs:pattern value="0[Xx][0-9a-fA-F]+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="hexValue">
        <xs:restriction base="xs:token">
            <xs:pattern value="-?0[Xx][0-9a-fA-F]+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="dateOrExpression">
        <xs:union memberTypes="date expression"/>
    </xs:simpleType>
    
    <xs:complexType name="arrayType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="value"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="staticPropertyType">
        <xs:attribute name="type" type="xs:token" use="required"/>
        <xs:attribute name="property" type="xs:token" use="required"/>
    </xs:complexType>    
    
    <xs:complexType name="refType">
        <xs:attribute name="id" type="xs:token" use="required"/>
    </xs:complexType>
    
</xs:schema>