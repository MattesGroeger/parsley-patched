#sc1 tagref_intro Configuration Tag Reference #sc1


#par This chapter serves as a pure reference for all configuration tags, listing all their attributes. 
For examples or more detailed explanations we will link to the corresponding chapters. #par

#par The reference covers Metadata, MXML and XML tags. Many of the tags are available for all three
configuration modes. Some only for one or two of them. The corresponding section will list which
of these options are available. #par



#sc2 tagref_injection Dependency Injection #sc2


#sc3 tagref_injection_properties Inject for Properties #sc3

#tbl
#tbr Metadata Tag # #cdi [Inject] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Tag # N/A #tbr
#tbr Detailed Explanation # #ref injection_property_type #ref and #ref injection_property_id #ref #tbr
#tbr Comment # For MXML or XML see #ref tagref_tags_property #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # Specifies the id of the object to inject, if omitted injection by type is performed. #tbr
#tbr #cdi required #cdi # optional # Indicates whether the dependency is required, default if omitted: #cdi true #cdi. #tbr
#tbl


#sc3 tagref_injection_methods Inject for Methods #sc3

#tbl
#tbr Metadata Tag # #cdi [Inject] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Tag # N/A #tbr
#tbr Detailed Explanation # #ref injection_method #ref #tbr
#tbl


#sub Attributes #sub

#par None #par


#sc3 tagref_injection_constructor InjectConstructor #sc3

#tbl
#tbr Metadata Tag # #cdi [InjectConstructor] #cdi #tbr
#tbr may be placed on # class declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Tag # N/A #tbr
#tbr Detailed Explanation # #ref injection_constructor #ref #tbr
#tbr Comment # For MXML or XML see #ref tagref_tags_constructor #ref #tbr
#tbl


#sub Attributes #sub

#par None #par



#sc2 tagref_bindings Decoupled Bindings #sc2



#sc3 tagref_bindings_publish Publish #sc3

#tbl
#tbr Metadata Tag # #cdi [Publish] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # <Publish/> #tbr
#tbr XML Tag # <publish/> #tbr
#tbr Detailed Explanation # #ref bindings_intro #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi objectId #cdi # optional # The id the property value is published with. #tbr
#tbr #cdi scope #cdi # optional # The scope the property value is published to. #tbr
#tbr #cdi managed #cdi # optional # Indicates whether the value published by this property should be 
added to the Context (turned into a managed object) while being published. #tbr
#tbr #cdi changeEvent #cdi # optional (Flash only) # The event that signals that the property value has changed.
Default is #cdi change #cdi. Not needed in Flex applications where this feature relies on the Flex Binding facility. #tbr
#tbr #cdi property #cdi # required for MXML/XML # The name of the property that holds the value to publish.
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_bindings_publish_subscribe PublishSubscribe #sc3

#tbl
#tbr Metadata Tag # #cdi [PublishSubscribe] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # <PublishSubscribe/> #tbr
#tbr XML Tag # <publish-subscribe/> #tbr
#tbr Detailed Explanation # #ref bindings_intro #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi objectId #cdi # optional # The id the property value is published with. #tbr
#tbr #cdi scope #cdi # optional # The scope the property value is published to. #tbr
#tbr #cdi managed #cdi # optional # Indicates whether the value published by this property should be 
added to the Context (turned into a managed object) while being published. #tbr
#tbr #cdi changeEvent #cdi # optional (Flash only) # The event that signals that the property value has changed.
Default is #cdi change #cdi. Not needed in Flex applications where this feature relies on the Flex Binding facility. #tbr
#tbr #cdi property #cdi # required for MXML/XML # The name of the property that holds the value to publish.
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_bindings_subscribe Subscribe #sc3

#tbl
#tbr Metadata Tag # #cdi [Subscribe] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # <Subscribe/> #tbr
#tbr XML Tag # <subscribe/> #tbr
#tbr Detailed Explanation # #ref bindings_intro #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi objectId #cdi # optional # The id the source is published with. #tbr
#tbr #cdi scope #cdi # optional # The scope the binding listens to. #tbr
#tbr #cdi property #cdi # required for MXML/XML # The name of the property that binds to the subscribed value.
Will be automatically set when used as a Metadata Tag. #tbr
#tbl




#sc2 tagref_injection Messaging #sc2


#sc3 tagref_messaging_managed_events ManagedEvents #sc3

#tbl
#tbr Metadata Tag # #cdi [ManagedEvents] #cdi #tbr
#tbr may be placed on # class declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <ManagedEvents/> #cdi #tbr
#tbr XML Tag # #cdi <managed-events/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_managed_events #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi names #cdi # required # The names (types) of the events dispatched from the annotated object that the container should manage. #tbr
#tbr #cdi scope #cdi # optional # The scope through which the event should be dispatched. If this attribute is omitted the 
event will be dispatched through all scopes associated with the Context the dispatching object lives in. #tbr
#tbl


#sc3 tagref_messaging_dispatcher MessageDispatcher #sc3

#tbl
#tbr Metadata Tag # #cdi [MessageDispatcher] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <MessageDispatcher/> #cdi #tbr
#tbr XML Tag # #cdi <message-dispatcher/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_injected_dispatchers #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi property #cdi # required for MXML/XML # The property the injected dispatcher function should be injected into. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbr #cdi scope #cdi # optional # The scope through which the message should be dispatched. If this attribute is omitted the 
message will be dispatched through all scopes associated with the Context the dispatching object lives in. #tbr
#tbl


#sc3 tagref_messaging_handler MessageHandler #sc3

#tbl
#tbr Metadata Tag # #cdi [MessageHandler] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <MessageHandler/> #cdi #tbr
#tbr XML Tag # #cdi <message-handler/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_handlers #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to receive. If omitted
all messages will be received (rarely useful). #tbr
#tbr #cdi messageProperties #cdi # optional # If specified not the message itself will be passed to the method, but
instead the listed properties of the message as method parameters. #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The method the message instance should be passed to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl


#sc3 tagref_messaging_binding MessageBinding #sc3

#tbl
#tbr Metadata Tag # #cdi [MessageBinding] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <MessageBinding/> #cdi #tbr
#tbr XML Tag # #cdi <message-binding/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_bindings #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The type (class) of the message that the annotated property should be bound to. #tbr
#tbr #cdi messageProperty #cdi # required # The name of the property of the message class whose value should be 
bound to the targetProperty. #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which bindings should be executed. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi targetProperty #cdi # required for MXML/XML # The name of the property that the message property value should be bound to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl


#sc3 tagref_messaging_interceptor MessageInterceptor #sc3

#tbl
#tbr Metadata Tag # #cdi [MessageInterceptor] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <MessageInterceptor/> #cdi #tbr
#tbr XML Tag # #cdi <message-interceptor/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_interceptors #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to intercept. If omitted
all messages will be received (rarely useful). #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which interceptors should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The interceptor method. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_error MessageError #sc3

#tbl
#tbr Metadata Tag # #cdi [MessageError] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <MessageError/> #cdi #tbr
#tbr XML Tag # #cdi <message-error/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_errorhandlers #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that was passed to the handler or interceptor that 
threw an Error. If omitted the error handler applies to all message types. #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message was dispatched to the handler or interceptor
that threw an Error. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which error handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The interceptor method. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_command Command #sc3

#tbl
#tbr Metadata Tag # #cdi [Command] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Command/> #cdi #tbr
#tbr XML Tag # #cdi <command/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_command_methods #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to receive. If omitted
the type will be deduced from the method parameter. #tbr
#tbr #cdi messageProperties #cdi # optional # If specified not the message itself will be passed to the method, but
instead the listed properties of the message as method parameters. #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The method the message instance should be passed to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_commandcomplete CommandComplete #sc3

#tbl
#tbr Metadata Tag # #cdi [CommandComplete] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <CommandComplete/> #cdi #tbr
#tbr XML Tag # #cdi <command-complete/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_command_methods #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to receive. If omitted
the type will be deduced from the method parameter (if available). #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which complete handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The method the result should be passed to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_commandresult CommandResult #sc3

#tbl
#tbr Metadata Tag # #cdi [CommandResult] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <CommandResult/> #cdi #tbr
#tbr XML Tag # #cdi <command-result/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_command_methods #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to receive. If omitted
the type will be deduced from the second method parameter (if available). #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which result handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The method the result should be passed to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_commanderror CommandError #sc3

#tbl
#tbr Metadata Tag # #cdi [CommandError] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <CommandError/> #cdi #tbr
#tbr XML Tag # #cdi <command-error/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_command_methods #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to receive. If omitted
the type will be deduced from the second method parameter (if available). #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which error handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi method #cdi # required for MXML/XML # The method the error should be passed to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_commandstatus CommandStatus #sc3

#tbl
#tbr Metadata Tag # #cdi [CommandStatus] #cdi #tbr
#tbr may be placed on # Boolean property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <CommandStatus/> #cdi #tbr
#tbr XML Tag # #cdi <command-status/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_command_methods #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the annotated method wishes to receive. If omitted
the type will be deduced from the second method parameter (if available). #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which error handlers should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi property #cdi # required for MXML/XML # The property which will act as a boolean flag for the matching command type. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc3 tagref_messaging_dynamiccommand DynamicCommand #sc3

#tbl
#tbr Metadata Tag # #cdi N/A #cdi #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <DynamicCommand/> #cdi #tbr
#tbr XML Tag # #cdi <dynamic-command/> #cdi #tbr
#tbr Detailed Explanation # #ref messaging_command_objects #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The type (class) of the command to create. #tbr
#tbr #cdi messageType #cdi # optional # The type (class) of the message that the command wishes to receive. If omitted
the type will be deduced from the method parameter (if available). #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi order #cdi # optional # The order in which commands should be invoked. The default value is #cdi int.MAX_VALUE #cdi. #tbr
#tbr #cdi messageProperties #cdi # optional # If specified not the message itself will be passed to the method, but
instead the listed properties of the message as method parameters. #tbr
#tbr #cdi stateful #cdi # optional # If false (the default) the framework will create a new instance of this command
for each matching message. If true the command instance will be reused for subsequent command invocations. #tbr
#tbr #cdi execute #cdi # optional # The name of the method that executes the command. The default is #cdi execute #cdi. #tbr
#tbr #cdi result #cdi # optional # The name of the method that handles the result. The default is #cdi result #cdi. #tbr
#tbr #cdi error #cdi # optional # The name of the method that handles any errors. The default is #cdi error #cdi. #tbr
#tbl

#sub Child Elements #sub

#par Any tag listed in 14.1 through 14.5, ConstructorArgs, Property, All Custom Configuration Tags that implement the
#cdi ObjectDefinitionDecorator #cdi interface. #par




#sc3 tagref_messaging_confirmation MessageConfirmation #sc3

#tbl
#tbr Metadata Tag # #cdi N/A #cdi #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <MessageConfirmation/> #cdi #tbr
#tbr XML Tag # #cdi <message-confirmation/> #cdi #tbr
#tbr Detailed Explanation # Simple utility tag that opens an Alert for matching messages and only continues with
message processing if the user clicks OK. This is a Flex-only feature. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # optional # The type (class) of the message that the alert should be shown for. #tbr
#tbr #cdi selector #cdi # optional # An selector value for filtering in addition to message selection by type.
See #ref messaging_selectors #ref. #tbr
#tbr #cdi scope #cdi # optional # The scope from which the message should be received. The default is the global scope. #tbr
#tbr #cdi text #cdi # required # The text to display in the Alert. #tbr
#tbr #cdi title #cdi # required # The title to display in the Alert. #tbr
#tbl



#sc3 tagref_messaging_selector Selector #sc3

#tbl
#tbr Metadata Tag # #cdi [Selector] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # #cdi N/A #cdi #tbr
#tbr XML Tag # #cdi N/A #cdi #tbr
#tbr Detailed Explanation # #ref messaging_selectors #ref #tbr
#tbl


#sub Attributes #sub

#par None #par


#sc2 tagref_lifecycle Object Lifecycle #sc2


#sc3 tagref_lifecycle_asyncinit AsyncInit #sc3

#tbl
#tbr Metadata Tag # #cdi [AsyncInit] #cdi #tbr
#tbr may be placed on # class declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <AsyncInit/> #cdi #tbr
#tbr XML Tag # #cdi <async-init/> #cdi #tbr
#tbr Detailed Explanation # #ref lifecycle_async #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi completeEvent #cdi # optional # The event type signalling that the object is fully initialized. 
Default #cdi Event.COMPLETE #cdi. #tbr
#tbr #cdi errorEvent #cdi # optional # The event type signalling that the object failed to initialize correctly. 
Default #cdi ErrorEvent.ERROR #cdi. #tbr
#tbl


#sc3 tagref_lifecycle_init Init #sc3

#tbl
#tbr Metadata Tag # #cdi [Init] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Init/> #cdi #tbr
#tbr XML Tag # #cdi <init/> #cdi #tbr
#tbr Detailed Explanation # #ref lifecycle_methods #ref #tbr
#tbr Note # The old name of this tag (PostConstruct) has been deprecated. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi method #cdi # required for MXML/XML # The name of the method to invoke when the object is fully initialized. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl


#sc3 tagref_lifecycle_destroy Destroy #sc3

#tbl
#tbr Metadata Tag # #cdi [Destroy] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Destroy/> #cdi #tbr
#tbr XML Tag # #cdi <destroy/> #cdi #tbr
#tbr Detailed Explanation # #ref lifecycle_methods #ref #tbr
#tbr Note # The old name of this tag (PreDestroy) has been deprecated. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi method #cdi # required for MXML/XML # The name of the method to invoke when the object is fully initialized. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl


#sc3 tagref_lifecycle_observe Observe #sc3

#tbl
#tbr Metadata Tag # #cdi [Observe] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Observe/> #cdi #tbr
#tbr XML Tag # #cdi <observe/> #cdi #tbr
#tbr Detailed Explanation # #ref lifecycle_observer #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi phase #cdi # optional # The lifecycle phase to observe. The default is #cdi postInit #cdi. The other permitted 
values are #cdi preConfigure #cdi, #cdi preInit #cdi, #cdi preDestroy #cdi and #cdi postDestroy #cdi. #tbr
#tbr #cdi objectId #cdi # optional # The id of the object to observe. If omitted the observer method will
be invoked for all matching types (polymorphically). #tbr
#tbr #cdi method #cdi # required for MXML/XML # The name of the method to invoke when the object is fully initialized. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc2 tagref_resources Localization #sc2


#sc3 tagref_resources_binding ResourceBinding #sc3

#tbl
#tbr Metadata Tag # #cdi [ResourceBinding] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <ResourceBinding/> #cdi #tbr
#tbr XML Tag # #cdi <resource-binding/> #cdi #tbr
#tbr Detailed Explanation # #ref resources_bindings #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi bundle #cdi # required # The bundle name of the resource. #tbr
#tbr #cdi key #cdi # required # The resource key. #tbr
#tbr #cdi property #cdi # required for MXML/XML # The name of the property that the resource should be bound to. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl



#sc2 tagref_extensions Extensibility #sc2


#sc3 tagref_extensions_factory Factory #sc3

#tbl
#tbr Metadata Tag # #cdi [Factory] #cdi #tbr
#tbr may be placed on # method declaration #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Factory/> #cdi #tbr
#tbr XML Tag # #cdi <factory/> #cdi #tbr
#tbr Detailed Explanation # #ref lifecycle_factories #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi method #cdi # required for MXML/XML # The name of the method that produces the obejcts. 
Will be automatically set when used as a Metadata Tag. #tbr
#tbl


#sc3 tagref_extensions_target Target #sc3

#tbl
#tbr Metadata Tag # #cdi [Target] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Tag # N/A #tbr
#tbr Detailed Explanation # #ref extensions_metadata #ref in Creating Custom Configuration Tags 
(final section titled "Metadata on Properties or Methods") #tbr
#tbl


#sub Attributes #sub

#par None #par


#sc2 tagref_asconfig ActionScript Configuration #sc2


#sc3 tagref_asconfig_definition ObjectDefinition #sc3

#tbl
#tbr Metadata Tag # #cdi [ObjectDefinition] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # #cdi N/A #cdi #tbr
#tbr XML Tag # #cdi N/A #cdi #tbr
#tbr Detailed Explanation # #ref config_as3 #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi lazy #cdi # optional # When set to false (default) the object will be instantiated when the container initializes
(but only if the singleton attribute keeps the default value (true). When set to true the object will be instantiated
on demand. #tbr
#tbr #cdi singleton #cdi # optional # When set to true (default) the container will only create a single instance of the
object, cache it internally and return the same instance upon each request. When set to false it will create
a new instance upon each request. #tbr
#tbr #cdi id #cdi # optional # The id the object should be registered with. If omitted the name of the property
that produces (or holds) the object will be used as the id. #tbr
#tbr #cdi order #cdi # optional # The initialization order. Only considered for non-lazy singletons,
processed in ascending order. Default #cdi int.MAX_VALUE #cdi. #tbr
#tbl


#sc3 tagref_asconfig_internal Internal #sc3

#tbl
#tbr Metadata Tag # #cdi [Internal] #cdi #tbr
#tbr may be placed on # property declaration #tbr
#tbr MXML and XML Namespace # N/A #tbr
#tbr MXML Tag # #cdi N/A #cdi #tbr
#tbr XML Tag # #cdi N/A #cdi #tbr
#tbr Detailed Explanation # May be placed on properties in an AS3 Configuration Class that should not be included in the IOC Container. #tbr
#tbl


#sub Attributes #sub

#par None #par


#sc2 tagref_tags MXML and XML Configuration #sc2


#sc3 tagref_tags_metadata Variants of Metadata Tags #sc3

#par This section lists tags that can only be used in MXML and XML configuration and not as Metadata in classes.
Nevertheless most of the other tags documented in previous sections can be used as MXML or XML tags, too (their tag names
are listed if this is the case). But for the tags in previous sections the most common use case is to use them as Metadata. #par


#sc3 tagref_tags_object Object #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Object/> #cdi #tbr
#tbr XML Tag # #cdi <object/> #cdi #tbr
#tbr Detailed Explanation # #ref config_mxml #ref and #ref config_xml #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The type of the object to create. #tbr
#tbr #cdi lazy #cdi # optional # When set to false (default) the object will be instantiated when the container initializes
(but only if the singleton attribute keeps the default value (true). When set to true the object will be instantiated
on demand. Can only be used in root object definitions, not in inline definitions. #tbr
#tbr #cdi id #cdi # optional # The id the object should be registered with. If omitted the name of the property
that produces (or holds) the object will be used as the id. Can only be used in root object definitions, not in inline definitions. #tbr
#tbr #cdi order #cdi # optional # The initialization order. Only considered for non-lazy singletons,
processed in ascending order. Default #cdi int.MAX_VALUE #cdi. #tbr
#tbl

#sub Child Elements #sub

#par Any tag listed in 14.1 through 14.5, ConstructorArgs, Property, All Custom Configuration Tags that implement the
#cdi ObjectDefinitionDecorator #cdi interface. #par



#sc3 tagref_tags_dynamicobject DynamicObject #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <DynamicObject/> #cdi #tbr
#tbr XML Tag # #cdi <dynamic-object/> #cdi #tbr
#tbr Detailed Explanation # #ref lifecycle_dynamic #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The type of the object to create. #tbr
#tbr #cdi id #cdi # optional # The id the object should be registered with. If omitted the name of the property
that produces (or holds) the object will be used as the id. Can only be used in root object definitions, not in inline definitions. #tbr
#tbl

#sub Child Elements #sub

#par Any tag listed in 14.1 through 14.5, ConstructorArgs, Property, All Custom Configuration Tags that implement the
#cdi ObjectDefinitionDecorator #cdi interface. #par


#sc3 tagref_tags_nestedobject NestedObject #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <NestedObject/> #cdi #tbr
#tbr XML Tag # #cdi N/A (simply use <object>) #cdi #tbr
#tbr Detailed Explanation # Needed in MXML for inline object definitions. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The type of the object to create. #tbr
#tbl

#sub Child Elements #sub

#par Any tag listed in 14.1 through 14.5, ConstructorArgs, Property, All Custom Configuration Tags that implement the
#cdi ObjectDefinitionDecorator #cdi interface. #par


#sc3 tagref_tags_view View #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <View/> #cdi #tbr
#tbr XML Tag # #cdi <view> #cdi #tbr
#tbr Detailed Explanation # #ref view_config_mxml_xml #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The type of the view that should be configured. #tbr
#tbr #cdi id #cdi # optional # The id of the view that should be configured. #tbr
#tbl


#sub Child Elements #sub

#par Any tag listed in 14.1 through 14.5, all Custom Configuration Tags that implement the
#cdi ObjectDefinitionDecorator #cdi interface except those that deal with object creation
as the View tag configures objects which already have been created by the Flex framework. #par



#sc3 tagref_tags_constructor ConstructorArgs #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <ConstructorArgs/> #cdi #tbr
#tbr XML Tag # #cdi <constructor-args/> #cdi #tbr
#tbr Description # May be used to explicitly specify the constructor arguments in MXML or XML as a list of child tags #tbr
#tbl


#sub Attributes #sub

None


#sub Child Elements #sub

#par Any tag listed in #ref tagref_tags_simple #ref, Object, Array, StaticPropertyRef or any tag that is mapped
to a simple object or a tag that implements #cdi NestedConfigurationElement #cdi. #par



#sc3 tagref_tags_property Property #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Property/> #cdi #tbr
#tbr XML Tag # #cdi <property/> #cdi #tbr
#tbr Description # May be used to explicitly specify a property value in MXML or XML.
The value may be a simple value or a dependency injected by type or by id. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi name #cdi # required # The name of the property. #tbr
#tbr #cdi value #cdi # optional # May be used for simple values (instead of a nested child node specifying the value). #tbr
#tbr #cdi idRef #cdi # optional # Specifies a dependency for this property, referring to another object in the container by id. #tbr
#tbr #cdi typeRef #cdi # optional # Specifies a dependency for this property, referring to another object in the container by type. #tbr
#tbr #cdi required #cdi # optional # Indicates whether the dependency is required (only applied if idRef or typeRef is set). #tbr
#tbl

#par The attributes #cdi value #cdi, #cdi idRef #cdi and #cdi typeRef #cdi are mutually exclusive. #par


#sub Child Elements #sub

#par A single Child Elements may be used to specify the value for the property if neither value, idRef nor typeRef have been
set as an attribute. Allowed are the same tags that are allowed as children of the ConstructorArgs tag:
Any tag listed in #ref tagref_tags_simple #ref, Object, Array, StaticPropertyRef or any tag that is mapped
to a simple object or a tag that implements #cdi NestedConfigurationElement #cdi. #par



#sc3 tagref_tags_dynamicproperty DynamicProperty #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <DynamicProperty/> #cdi #tbr
#tbr XML Tag # #cdi <dynamic-property/> #cdi #tbr
#tbr Description # May be used to explicitly specify a property value for a dynamic class in MXML or XML.
The value may be a simple value or a dependency injected by type or by id. This tag is useful for configuring
generic Objects or a Dictionary for example. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi name #cdi # required # The name of the property. #tbr
#tbr #cdi value #cdi # optional # May be used for simple values (instead of a nested child node specifying the value). #tbr
#tbr #cdi idRef #cdi # optional # Specifies a dependency for this property, referring to another object in the container by id. #tbr
#tbr #cdi typeRef #cdi # optional # Specifies a dependency for this property, referring to another object in the container by type. #tbr
#tbr #cdi required #cdi # optional # Indicates whether the dependency is required (only applied if idRef or typeRef is set). #tbr
#tbl

#par The attributes #cdi value #cdi, #cdi idRef #cdi and #cdi typeRef #cdi are mutually exclusive. #par


#sub Child Elements #sub

#par A single Child Elements may be used to specify the value for the property if neither value, idRef nor typeRef have been
set as an attribute. Allowed are the same tags that are allowed as children of the ConstructorArgs tag:
Any tag listed in #ref tagref_tags_simple #ref, Object, Array, StaticPropertyRef or any tag that is mapped
to a simple object or a tag that implements #cdi NestedConfigurationElement #cdi. #par



#sc3 tagref_tags_ref ObjectRef #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <ObjectRef/> #cdi #tbr
#tbr XML Tag # #cdi <object-ref/> #cdi #tbr
#tbr Description # May be used to specify a reference to another object in the container by id or by type. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi idRef #cdi # optional # Specifies a dependency for this property, referring to another object in the container by id. #tbr
#tbr #cdi typeRef #cdi # optional # Specifies a dependency for this property, referring to another object in the container by type. #tbr
#tbr #cdi required #cdi # optional # Indicates whether the dependency is required (only applied if idRef or typeRef is set). #tbr
#tbl

#par The attributes #cdi idRef #cdi and #cdi typeRef #cdi are mutually exclusive. #par


#sub Child Elements #sub

#par None. #par


#sc3 tagref_tags_array Array #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Array/> #cdi #tbr
#tbr XML Tag # #cdi <array/> #cdi #tbr
#tbr Description # May be used to specify Array values in MXML or XML, specifying the elements as a list of child tags.
Should be preferred over fx:Array if it contains special Parsley tags as children (they won't be processed within a regular
fx:Array tag). #tbr
#tbl


#sub Attributes #sub

None


#sub Child Elements #sub

#par Any tag listed in #ref tagref_tags_simple #ref, Object, Array, StaticPropertyRef or any tag that is mapped
to a simple object or a tag that implements #cdi NestedConfigurationElement #cdi. #par


#sc3 tagref_tags_static StaticPropertyRef #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # #cdi N/A #cdi #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr XML Tag # #cdi <static-property-ref/> #cdi #tbr
#tbr Description # May be used to refer to a static property in XML configuration files. Not necessary
in MXML configuration, use normal binding syntax in MXML (e.g. value="{Environment.CONSTANT}"). #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi type #cdi # required # The class the static property value should be fetched from. #tbr
#tbr #cdi property #cdi # required # The name of the static property. #tbr
#tbl


#sub Child Elements #sub

#par None #par


#sc3 tagref_tags_simple Simple Values #sc3

#par For MXML configuration you can use the builtin tags to specify simple values like #cdi fx:String #cdi or #cdi fx:int #cdi.
For XML configuration Parsley includes a number of tags that can be used for simple values: #par

#lst
#lse string #lse
#lse boolean #lse
#lse int #lse
#lse uint #lse
#lse number #lse
#lse date #lse
#lse class #lse
#lse null #lse
#lst

#par Example: #par

#cdb
<object type="com.example.FooManager">
    <constructor-args>
        <string>Hello</string>
        <int>7</int>
        <boolean>true</boolean>
        <object-ref id-ref="barManager"/>
    </constructor-args>
</object>
#cdb


#sc3 tagref_tags_static Include #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # #cdi N/A #cdi #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr XML Tag # #cdi <include/> #cdi #tbr
#tbr Description # May be used to include additional XML configuration files. You can place any number of
include tags in XML configuration files. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi filename #cdi # required # The name of the file to include. #tbr
#tbl


#sub Child Elements #sub

#par None #par


#sc3 tagref_tags_static Variable #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # #cdi N/A #cdi #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr XML Tag # #cdi <variable/> #cdi #tbr
#tbr Description # May be used to declare variables which may be used in XML attributes or text nodes
with the notation #cdi ${variableName} #cdi. #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi name #cdi # required # The name of the variable. #tbr
#tbr #cdi value #cdi # required # The value of the variable. #tbr
#tbl


#sub Child Elements #sub

#par None #par



#sc2 tagref_view Flex Component Wiring #sc2


#sc3 tagref_view_configure Configure #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Namespace # #cdi http://www.spicefactory.org/parsley #cdi #tbr
#tbr MXML Tag # #cdi <Configure/> #cdi #tbr
#tbr XML Tag # N/A #tbr
#tbr Detailed Explanation # #ref view_config_explicit #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi target #cdi # optional # The object that should be wired to the Context. If omitted the document object
the tag was placed in will be wired. #tbr
#tbr #cdi repeat #cdi # optional # Indicates whether the wiring should happen repeatedly whenever the 
object is added to the stage. When set to false it is only wired once. The default is true. #tbr
#tbl



#sc2 tagref_logging_flex Flex Logging #sc2


#sc3 tagref_logging_flex_target Target #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A (the builtin MXML tags for LogTargets can be used instead) #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flex/logging #cdi #tbr
#tbr XML Tag # #cdi <target/> #cdi #tbr
#tbr Required Initialization # #cdi FlexLoggingXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref logging_flex #ref #tbr
#tbl


#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id of the #cdi LogTarget #cdi, usually not needed. #tbr
#tbr #cdi type #cdi # optional # The type (class) of the #cdi LogTarget #cdi, defaults to #cdi TraceTarget #cdi if omitted. #tbr
#tbr #cdi level #cdi # optional # The minimum level that this target should log. #tbr
#tbr attributes of #cdi LineFormattedTarget #cdi # optional # If the specified type extends #cdi LineFormattedTarget #cdi
all properties of that class can be set: #cdi field-separator #cdi, #cdi include-category #cdi, #cdi include-level #cdi,
#cdi include-date #cdi, #cdi include-time #cdi. #tbr
#tbl


#sc2 tagref_logging_flash Flash Logging #sc2


#sc3 tagref_logging_flash_factory LogFactory #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flash/logging #cdi #tbr
#tbr XML Tag # #cdi <factory/> #cdi #tbr
#tbr Required Initialization # #cdi FlashLoggingXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref logging_flash #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id of the #cdi LogFactory #cdi, usually not needed. #tbr
#tbr #cdi type #cdi # optional # The type (class) of the #cdi LogFactory #cdi, defaults to #cdi DefaultLogFactory #cdi which
is usually sufficient. #tbr
#tbr #cdi context #cdi # optional # Boolean attribute (defaults to #cdi true #cdi). Indicates whether this factory should
be set as the factory for the #cdi LogContext #cdi class. Should only be set to #cdi false #cdi for special requirements. #tbr
#tbr #cdi root-level #cdi # optional # The default log level for loggers for which no level has been specified explicitly.
Defaults to #cdi LogLevel.TRACE #cdi. #tbr
#tbl

#sub Child Elements #sub

#tbl
#tbr #cdi appender #cdi # optional # One or more Appenders that handle the log output. Usually at least one is required
to see any output. #tbr
#tbr #cdi logger #cdi # optional # Configuration for individual loggers. Only required for loggers which should not use
the #cdi root-level #cdi. #tbr
#tbl


#sc3 tagref_logging_flash_logger Logger #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flash/logging #cdi #tbr
#tbr XML Tag # #cdi <logger/> #cdi #tbr
#tbr Required Initialization # #cdi FlashLoggingXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref logging_flash #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi name #cdi # required # The name of the Logger. #tbr
#tbr #cdi level #cdi # required # The minum level this Logger should log. Valid values are #cdi trace #cdi, #cdi debug #cdi,
#cdi info #cdi, #cdi warn #cdi, #cdi error #cdi and #cdi fatal #cdi. #tbr
#tbl

#sub Child Elements #sub

#par None #par


#sc3 tagref_logging_flash_appender Appender #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flash/logging #cdi #tbr
#tbr XML Tag # #cdi <appender/> #cdi #tbr
#tbr Required Initialization # #cdi FlashLoggingXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref logging_flash #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi ref #cdi # required # The id of the #cdi Appender #cdi class configured in the Parsley Context. For configuring
the #cdi Appender #cdi itself you can use regular Parsley #cdi <object> #cdi tags. #tbr
#tbr #cdi threshold #cdi # required # The minum level this Appender should log. May be used as an additional filter mechanism
in addition to the level settings for individual loggers. Valid values are #cdi trace #cdi, #cdi debug #cdi,
#cdi info #cdi, #cdi warn #cdi, #cdi error #cdi and #cdi fatal #cdi. #tbr
#tbl

#sub Child Elements #sub

#par None #par



#sc2 tagref_resources_flash Flash Localization #sc2


#sc3 tagref_resources_flash_manager ResourceManager #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flash/resources #cdi #tbr
#tbr XML Tag # #cdi <resource-manager/> #cdi #tbr
#tbr Required Initialization # #cdi FlashResourceXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref resources_flash #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id of the #cdi ResourceManager #cdi, usually not needed as you should only
configure one #cdi ResourceManager #cdi instance and thus are able to inject it by type. #tbr
#tbr #cdi type #cdi # optional # The type (class) of the #cdi ResourceManager #cdi, defaults to #cdi DefaultResourceManager #cdi which
is usually sufficient. #tbr
#tbr #cdi cacheable #cdi # optional # Boolean attribute (defaults to #cdi false #cdi). Indicates whether the ResourceManager
should cache loaded bundles. #tbr
#tbr #cdi persistent #cdi # optional # Boolean attribute (defaults to #cdi false #cdi). Indicates whether the ResourceManager
should store the last active locale in a Local Shared Object and restore it on the next application start. #tbr
#tbl

#sub Child Elements #sub

#tbl
#tbr #cdi locale #cdi # optional # The locales supported by this ResourceManager. #tbr
#tbl


#sc3 tagref_resources_flash_locale Locale #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flash/resources #cdi #tbr
#tbr XML Tag # #cdi <locale/> #cdi #tbr
#tbr Required Initialization # #cdi FlashResourceXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref resources_flash #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi language #cdi # optional # The language code for this locale, a lowercase ISO 639 code (e.g. #cdi en #cdi or #cdi fr #cdi). #tbr
#tbr #cdi country #cdi # optional # The country/region code for this locale, an uppercase ISO 3166 2-letter code
(e.g. #cdi US #cdi or #cdi FR #cdi). #tbr
#tbl

#sub Child Elements #sub

#par None #par


#sc3 tagref_resources_flash_bundle ResourceBundle #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML Tag # N/A #tbr
#tbr XML Namespace # #cdi http://www.spicefactory.org/parsley/flash/resources #cdi #tbr
#tbr XML Tag # #cdi <resource-bundle/> #cdi #tbr
#tbr Required Initialization # #cdi FlashResourceXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref resources_flash #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # required # The id of the bundle. #tbr
#tbr #cdi basename #cdi # required # The basename of files containing messages for this bundle. 
For the locale #cdi en_US #cdi for example the basename messages/tooltips will instruct Parsley to load the 
following files: #cdi messages/tooltips_en_US.xml #cdi, #cdi messages/tooltips_en.xml #cdi and #cdi messages/tooltips.xml #cdi. #tbr
#tbr #cdi type #cdi # optional # The type (class) of the #cdi ResourceBundle #cdi, defaults to #cdi DefaultResourceBundle #cdi which
is usually sufficient. #tbr

#tbr #cdi loader-factory #cdi # optional # The type (class) of the #cdi BundleLoaderFactory #cdi, 
responsible for loading the bundle files. Defaults to #cdi DefaultResourceBundle #cdi which
is usually sufficient. #tbr
#tbr #cdi localized #cdi # optional # Boolean attribute (defaults to #cdi true #cdi). If set to false the framework will only load 
the resources for the basename like #cdi messages/tooltips.xml #cdi and not look for files with localized messages. #tbr
#tbr #cdi ignore-country #cdi # optional # Boolean attribute (defaults to #cdi false #cdi). If set to true the framework will 
ignore the country code of the active locale for this bundle. #tbr
#tbl


#sub Child Elements #sub

#par None #par


#sc2 tagref_pimento Pimento Data Services #sc2


#sc3 tagref_pimento_config Config #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace  # #cdi http://www.spicefactory.org/parsley/pimento #cdi #tbr
#tbr MXML Tag # <Config/> #tbr
#tbr XML Tag # #cdi <config/> #cdi #tbr
#tbr Required Initialization for XML # #cdi PimentoXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref remoting_pimento #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id of the configuration instance. #tbr
#tbr #cdi url #cdi # required # The URL that Pimento should connect to. #tbr
#tbr #cdi timeout #cdi # optional # Specifies the request timeout in milliseconds. #tbr
#tbl

#sub Child Elements #sub

#par None #par


#sc3 tagref_pimento_service Service #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace  # #cdi http://www.spicefactory.org/parsley/pimento #cdi #tbr
#tbr MXML Tag # <Service/> #tbr
#tbr XML Tag # #cdi <service/> #cdi #tbr
#tbr Required Initialization for XML # #cdi PimentoXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref remoting_pimento #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id that this service will be registered with in the Parsley IOC Container. #tbr
#tbr #cdi name #cdi # required # The name of the service as registered on the server-side. #tbr
#tbr #cdi type #cdi # required # The AS3 service implementation (usually generated with Pimentos Ant Task). #tbr
#tbr #cdi config #cdi # optional # The id of the #cdi PimentoConfig #cdi instance to use for this service. Only required
if you have more than one #cdi config #cdi tag in your Context. If there is only one (like in most use cases)
it will be automatically detected. #tbr
#tbr #cdi timeout #cdi # optional # Specifies the request timeout in milliseconds. #tbr
#tbl


#sc2 tagref_cinnamon Cinnamon Remoting #sc2


#sc3 tagref_cinnamon_channel Channel #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace  # #cdi http://www.spicefactory.org/parsley/cinnamon #cdi #tbr
#tbr MXML Tag # <Channel/> #tbr
#tbr XML Tag # #cdi <channel/> #cdi #tbr
#tbr Required Initialization for XML # #cdi CinnamonXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref remoting_cinnamon #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id of the channel instance. #tbr
#tbr #cdi url #cdi # required # The URL that the channel should connect to. #tbr
#tbr #cdi type #cdi # optional # The type (class) of the channel, defaults to #cdi NetConnectionServiceChannel #cdi. #tbr
#tbr #cdi timeout #cdi # optional # Specifies the request timeout in milliseconds. #tbr
#tbl

#sub Child Elements #sub

#par None #par


#sc3 tagref_cinnamon_service Service #sc3

#tbl
#tbr Metadata Tag # N/A #tbr
#tbr MXML and XML Namespace  # #cdi http://www.spicefactory.org/parsley/cinnamon #cdi #tbr
#tbr MXML Tag # <Service/> #tbr
#tbr XML Tag # #cdi <service/> #cdi #tbr
#tbr Required Initialization for XML # #cdi CinnamonXmlSupport.initialize() #cdi #tbr
#tbr Detailed Explanation # #ref remoting_cinnamon #ref #tbr
#tbl

#sub Attributes #sub

#tbl
#tbr #cdi id #cdi # optional # The id that this service will be registered with in the Parsley IOC Container. #tbr
#tbr #cdi name #cdi # required # The name of the service as registered on the server-side. #tbr
#tbr #cdi type #cdi # required # The AS3 service implementation (usually generated with Pimentos Ant Task). #tbr
#tbr #cdi channel #cdi # optional # Reference to the id of the #cdi ServiceChannel #cdi instance. Only required
if you have more than one #cdi channel #cdi tag in your Context. If there is only one (like in most use cases)
it will be automatically detected. #tbr
#tbr #cdi timeout #cdi # optional # Specifies the request timeout in milliseconds. #tbr
#tbl




