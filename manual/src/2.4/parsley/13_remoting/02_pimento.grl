#sc2 remoting_pimento Pimento Data Services #sc2

#par Pimento integrates JPA/Hibernate and Spring with Flex, Flash and AIR clients. It is another Open Source Project
under the Spicefactory umbrella. See the #url http://www.spicefactory.org/pimento/ Pimento Info Page #url for more details. #par

#par Parsley includes custom configuration tags for Pimento for MXML and XML that allow you to define
the Pimento configuration and custom services. #par

#sub MXML Example #sub

#cdb
<Objects 
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns="http://www.spicefactory.org/parsley"
    xmlns:pimento="http://www.spicefactory.org/parsley/pimento">
    
    <fx:Declarations>
    
        <pimento:Config
            url="http://localhost:8080/test/service/"
            timeout="3000"
        />
    
        <!-- other objects -->
        
    </fx:Declarations>
    
</Objects> 
#cdb

#par This minimal setup is all that is required to be able to inject Pimentos AS3 EntityManager into any object: #par

#cdb
[Inject]
public var entityManager:EntityManager;

[Command]
public function deleteCart (message:DeleteCartMessage) : ServiceRequest {
    return entitiyManager.remove(message.cart);
} 
#cdb

#par You can additionally configure custom services with parameters and return values managed by Pimento: #par

#cdb
<pimento:Service
    name="loginService"
    type="{LoginServiceImpl}"
/>
#cdb

#par The service interfaces and remote stubs are usually generated by Pimentos Ant task. These services can then
of course be injected into other objects, too. #par

#sub XML Example #sub

#cdb
<objects 
    xmlns="http://www.spicefactory.org/parsley"
    xmlns:pimento="http://www.spicefactory.org/parsley/pimento"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.spicefactory.org/parsley 
      http://www.spicefactory.org/parsley/schema/2.3/parsley-core.xsd 
    http://www.spicefactory.org/parsley/pimento 
      http://www.spicefactory.org/parsley/schema/2.3/parsley-pimento.xsd"
    >
    <pimento:config 
        url="http://localhost/test/service/"
        timeout="3000"
    />
    <pimento:service
        name="loginService"
        type="com.bookstore.services.LoginServiceImpl"
    />
</objects>
#cdb

#par Since this is an XML extension it has to be initialized explicitly before using the #cdi XmlContextBuilder #cdi: #par

#cdb
PimentoXmlSupport.initialize();
#cdb
